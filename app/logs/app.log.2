2024-08-16 04:58:17,496 - ERROR - Exception on /loan_account_statement/1821014504 [GET]
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "/app/app/loan_account_statement.py", line 53, in loan_account_statement
    return render_template('loan_account_statement.html', user=user, account=account, loan_transactions=loan_transactions, remaining_loan_amount=remaining_loan_amount, last_emi=last_emi, emi=emi, tenure=tenure, pending_emi_count=pending_emi_count, timedelta=timedelta)
  File "/usr/local/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/usr/local/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/usr/local/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/usr/local/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/app/app/templates/loan_account_statement.html", line 76, in top-level template code
    #    {% if i <= emi_payment_count %}
jinja2.exceptions.UndefinedError: 'emi_payment_count' is undefined
2024-08-16 05:05:08,567 - ERROR - Exception on /loan_account_statement/1821014504 [GET]
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "/app/app/loan_account_statement.py", line 53, in loan_account_statement
    return render_template('loan_account_statement.html', user=user, account=account, loan_transactions=loan_transactions, remaining_loan_amount=remaining_loan_amount, last_emi=last_emi, emi=emi, tenure=tenure, pending_emi_count=pending_emi_count, timedelta=timedelta)
  File "/usr/local/lib/python3.8/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
  File "/usr/local/lib/python3.8/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
  File "/usr/local/lib/python3.8/site-packages/jinja2/environment.py", line 1304, in render
    self.environment.handle_exception()
  File "/usr/local/lib/python3.8/site-packages/jinja2/environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/app/app/templates/loan_account_statement.html", line 27, in top-level template code
    <td>{{ tenure - paid_emi_count }} out of {{ tenure }}</td>
jinja2.exceptions.UndefinedError: 'paid_emi_count' is undefined
2024-08-17 09:17:45,151 - ERROR - Exception on /all_accounts [GET]
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1815, in _execute_context
    context = constructor(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 1418, in _init_compiled
    self.cursor = self.create_cursor()
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 1752, in create_cursor
    return self.create_default_cursor()
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 1758, in create_default_cursor
    return self._dbapi_connection.cursor()
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 1485, in cursor
    return self.dbapi_connection.cursor(*args, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/mysql/connector/connection_cext.py", line 772, in cursor
    raise OperationalError("MySQL Connection not available.")
mysql.connector.errors.OperationalError: MySQL Connection not available.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "/app/app/views.py", line 30, in decorated_function
    return f(*args, **kwargs)
  File "/app/app/views.py", line 106, in all_accounts
    accounts = Account.query.all()
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/query.py", line 2673, in all
    return self._iter().all()  # type: ignore
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/query.py", line 2827, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 2362, in execute
    return self._execute_internal(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 2247, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/orm/context.py", line 293, in orm_execute_statement
    result = conn.execute(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1821, in _execute_context
    self._handle_dbapi_exception(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1815, in _execute_context
    context = constructor(
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 1418, in _init_compiled
    self.cursor = self.create_cursor()
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 1752, in create_cursor
    return self.create_default_cursor()
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 1758, in create_default_cursor
    return self._dbapi_connection.cursor()
  File "/usr/local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 1485, in cursor
    return self.dbapi_connection.cursor(*args, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/mysql/connector/connection_cext.py", line 772, in cursor
    raise OperationalError("MySQL Connection not available.")
sqlalchemy.exc.OperationalError: (mysql.connector.errors.OperationalError) MySQL Connection not available.
[SQL: SELECT account.account_number AS account_account_number, account.name AS account_name, account.account_type AS account_account_type, account.balance AS account_balance 
FROM account]
[parameters: [{}]]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
